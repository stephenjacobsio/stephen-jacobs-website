---
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "5000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    env_file:
      - .env

  postgres:
    image: postgres:13
    container_name: postgres
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      NEXT_PUBLIC_API_URL: http://backend:5000/api/v1
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - app_network
    env_file:
      - .env

volumes:
  postgres-data:

networks:
  app_network:
    driver: bridge